{"ast":null,"code":"var _jsxFileName = \"/home/zeldah/git/tutorials/wordle-react/src/components/Grid.js\";\nimport React from 'react';\nimport Row from './Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = _ref => {\n  let {\n    currentGuess,\n    guesses,\n    turn\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: guesses.map((g, i) => {\n      if (i === turn) {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          currentGuess: currentGuess\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          guess: g\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 28\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/home/zeldah/git/tutorials/wordle-react/src/components/Grid.js"],"names":["React","Row","Grid","currentGuess","guesses","turn","map","g","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,IAAI,GAAG,QAAqC;AAAA,MAApC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,GAAoC;AAC9C,sBACI;AAAA,cACKD,OAAO,CAACE,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB,UAAIA,CAAC,KAAKH,IAAV,EAAgB;AACZ,4BAAO,QAAC,GAAD;AAAa,UAAA,YAAY,EAAEF;AAA3B,WAAUK,CAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH,4BAAO,QAAC,GAAD;AAAa,UAAA,KAAK,EAAED;AAApB,WAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ,KANA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD;;KAAMN,I;AAcN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport Row from './Row';\n\nconst Grid = ({ currentGuess, guesses, turn }) => {\n    return (\n        <div>\n            {guesses.map((g, i) => {\n                if (i === turn) {\n                    return <Row key={i} currentGuess={currentGuess} />\n                } else {\n                    return <Row key={i} guess={g}/>\n                }\n            })}\n        </div>\n    );\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}