{"ast":null,"code":"var _jsxFileName = \"/home/zeldah/git/tutorials/wordle-react/src/components/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wordle = _ref => {\n  _s();\n\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    handleKeyup,\n    guesses\n  } = useWordle(solution);\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyup);\n    return () => window.removeEventListener(\"keyup\", handleKeyup);\n  }, [handleKeyup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"solution - \", solution, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"current guess - \", currentGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"guesses - \", guesses, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Wordle, \"HYXyYPEudRgp5ob+Ij4rt1sv9PU=\", false, function () {\n  return [useWordle];\n});\n\n_c = Wordle;\nexport default Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["/home/zeldah/git/tutorials/wordle-react/src/components/Wordle.js"],"names":["React","useEffect","useWordle","Wordle","solution","currentGuess","handleKeyup","guesses","window","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;;AAEA,MAAMC,MAAM,GAAG,QAAmB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,MAAyCL,SAAS,CAACE,QAAD,CAAxD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCH,WAAjC;AAEA,WAAO,MAAME,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCJ,WAApC,CAAb;AACH,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA,gCAAiBF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,qCACqBC,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA,+BAAgBE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjBD;;GAAMJ,M;UAC6CD,S;;;KAD7CC,M;AAmBN,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\n\nconst Wordle = ( { solution }) => {\n    const { currentGuess, handleKeyup, guesses } = useWordle(solution)\n\n    useEffect(() => {\n        window.addEventListener(\"keyup\", handleKeyup)\n\n        return () => window.removeEventListener(\"keyup\", handleKeyup)\n    }, [handleKeyup]);\n    return (\n        <div>\n            <div>solution - {solution} </div>\n            <div>\n                current guess - {currentGuess}\n            </div>\n            <div>guesses - {guesses} </div>\n        </div>\n    );\n}\n\nexport default Wordle;\n"]},"metadata":{},"sourceType":"module"}