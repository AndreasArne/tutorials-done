{"ast":null,"code":"var _jsxFileName = \"/home/zeldah/git/tutorials/wordle-react/src/components/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport { logDOM } from '@testing-library/react';\nimport React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wordle = _ref => {\n  _s();\n\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    handleKeyup,\n    guesses,\n    isCorrect\n  } = useWordle(solution);\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyup);\n    return () => window.removeEventListener(\"keyup\", handleKeyup);\n  }, [handleKeyup]);\n  useEffect(() => {\n    console.log(guesses, turn, isCorrect);\n  }, [guesses, turn, isCorrect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"solution - \", solution, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"current guess - \", currentGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"guesses - \", guesses, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"is correct? - \", isCorrect, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Wordle, \"Pialf4x355bc/GBDeuO3g3TFagc=\", false, function () {\n  return [useWordle];\n});\n\n_c = Wordle;\nexport default Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["/home/zeldah/git/tutorials/wordle-react/src/components/Wordle.js"],"names":["logDOM","React","useEffect","useWordle","Wordle","solution","currentGuess","handleKeyup","guesses","isCorrect","window","addEventListener","removeEventListener","console","log","turn"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;;AAEA,MAAMC,MAAM,GAAG,QAAmB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA;AAAtC,MAAoDN,SAAS,CAACE,QAAD,CAAnE;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCJ,WAAjC;AAEA,WAAO,MAAMG,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCL,WAApC,CAAb;AACH,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqBO,IAArB,EAA2BN,SAA3B;AACH,GAFQ,EAEN,CAACD,OAAD,EAAUO,IAAV,EAAgBN,SAAhB,CAFM,CAAT;AAGA,sBACI;AAAA,4BACI;AAAA,gCAAiBJ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,qCACqBC,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA,+BAAgBE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,mCAAoBC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAtBD;;GAAML,M;UACwDD,S;;;KADxDC,M;AAwBN,eAAeA,MAAf","sourcesContent":["import { logDOM } from '@testing-library/react';\nimport React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\n\nconst Wordle = ( { solution }) => {\n    const { currentGuess, handleKeyup, guesses, isCorrect } = useWordle(solution)\n\n    useEffect(() => {\n        window.addEventListener(\"keyup\", handleKeyup)\n\n        return () => window.removeEventListener(\"keyup\", handleKeyup)\n    }, [handleKeyup]);\n\n    useEffect(() => {\n        console.log(guesses, turn, isCorrect);\n    }, [guesses, turn, isCorrect])\n    return (\n        <div>\n            <div>solution - {solution} </div>\n            <div>\n                current guess - {currentGuess}\n            </div>\n            <div>guesses - {guesses} </div>\n            <div>is correct? - {isCorrect} </div>\n        </div>\n    );\n}\n\nexport default Wordle;\n"]},"metadata":{},"sourceType":"module"}