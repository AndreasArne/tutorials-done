{"ast":null,"code":"var _jsxFileName = \"/home/zeldah/git/tutorials/wordle-react/src/components/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport Grid from './Grid';\nimport Keypad from './Keypad';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wordle = _ref => {\n  _s();\n\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    handleKeyup,\n    guesses,\n    isCorrect,\n    turn,\n    usedKeys\n  } = useWordle(solution);\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyup);\n    return () => window.removeEventListener(\"keyup\", handleKeyup);\n  }, [handleKeyup]);\n  useEffect(() => {\n    console.log(guesses, turn, isCorrect);\n  }, [guesses, turn, isCorrect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"solution - \", solution, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"current guess - \", currentGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      currentGuess: currentGuess,\n      guesses: guesses,\n      turn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keypad, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Wordle, \"9Akkrz/VOTbkZUazFurjomlsXhI=\", false, function () {\n  return [useWordle];\n});\n\n_c = Wordle;\nexport default Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["/home/zeldah/git/tutorials/wordle-react/src/components/Wordle.js"],"names":["React","useEffect","useWordle","Grid","Keypad","Wordle","solution","currentGuess","handleKeyup","guesses","isCorrect","turn","usedKeys","window","addEventListener","removeEventListener","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,MAAM,GAAG,QAAmB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA,SAAtC;AAAiDC,IAAAA,IAAjD;AAAuDC,IAAAA;AAAvD,MAAoEV,SAAS,CAACI,QAAD,CAAnF;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCN,WAAjC;AAEA,WAAO,MAAMK,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCP,WAApC,CAAb;AACH,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAAqBE,IAArB,EAA2BD,SAA3B;AACH,GAFQ,EAEN,CAACD,OAAD,EAAUE,IAAV,EAAgBD,SAAhB,CAFM,CAAT;AAGA,sBACI;AAAA,4BACI;AAAA,gCAAiBJ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,qCACqBC,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEA,YAApB;AAAkC,MAAA,OAAO,EAAEE,OAA3C;AAAoD,MAAA,IAAI,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAtBD;;GAAMN,M;UACwEH,S;;;KADxEG,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport Grid from './Grid';\nimport Keypad from './Keypad';\n\nconst Wordle = ( { solution }) => {\n    const { currentGuess, handleKeyup, guesses, isCorrect, turn, usedKeys } = useWordle(solution)\n\n    useEffect(() => {\n        window.addEventListener(\"keyup\", handleKeyup)\n\n        return () => window.removeEventListener(\"keyup\", handleKeyup)\n    }, [handleKeyup]);\n\n    useEffect(() => {\n        console.log(guesses, turn, isCorrect);\n    }, [guesses, turn, isCorrect])\n    return (\n        <div>\n            <div>solution - {solution} </div>\n            <div>\n                current guess - {currentGuess}\n            </div>\n            <Grid currentGuess={currentGuess} guesses={guesses} turn={turn}/>\n            <Keypad />\n        </div>\n    );\n}\n\nexport default Wordle;\n"]},"metadata":{},"sourceType":"module"}