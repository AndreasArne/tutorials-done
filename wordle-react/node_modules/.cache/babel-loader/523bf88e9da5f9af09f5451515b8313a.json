{"ast":null,"code":"var _jsxFileName = \"/home/zeldah/git/tutorials/wordle-react/src/components/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport Grid from './Grid';\nimport Keypad from './Keypad';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wordle = _ref => {\n  _s();\n\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    handleKeyup,\n    guesses,\n    isCorrect,\n    turn,\n    usedKeys\n  } = useWordle(solution);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyup);\n\n    if (isCorrect) {\n      console.log(\"congratz you win\");\n      window.removeEventListener(\"keyup\", handleKeyup);\n    }\n\n    if (turn > 5) {\n      console.log(\"You lose\");\n      window.removeEventListener(\"keyup\", handleKeyup);\n    }\n\n    return () => window.removeEventListener(\"keyup\", handleKeyup);\n  }, [handleKeyup, isCorrect, turn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"solution - \", solution, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"current guess - \", currentGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      currentGuess: currentGuess,\n      guesses: guesses,\n      turn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n      usedKeys: usedKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Wordle, \"x6EX5paQ7B0FrqTMmqLQmoGwPRY=\", false, function () {\n  return [useWordle];\n});\n\n_c = Wordle;\nexport default Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["/home/zeldah/git/tutorials/wordle-react/src/components/Wordle.js"],"names":["React","useEffect","useState","useWordle","Grid","Keypad","Modal","Wordle","solution","currentGuess","handleKeyup","guesses","isCorrect","turn","usedKeys","showModal","setShowModal","window","addEventListener","console","log","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,MAAM,GAAG,QAAmB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA,SAAtC;AAAiDC,IAAAA,IAAjD;AAAuDC,IAAAA;AAAvD,MAAoEX,SAAS,CAACK,QAAD,CAAnF;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCR,WAAjC;;AAEA,QAAIE,SAAJ,EAAe;AACXO,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,OAA3B,EAAoCX,WAApC;AACH;;AAED,QAAIG,IAAI,GAAG,CAAX,EAAc;AACVM,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,OAA3B,EAAoCX,WAApC;AACH;;AAED,WAAO,MAAMO,MAAM,CAACI,mBAAP,CAA2B,OAA3B,EAAoCX,WAApC,CAAb;AACH,GAdQ,EAcN,CAACA,WAAD,EAAcE,SAAd,EAAyBC,IAAzB,CAdM,CAAT;AAgBA,sBACI;AAAA,4BACI;AAAA,gCAAiBL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,qCACqBC,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEA,YAApB;AAAkC,MAAA,OAAO,EAAEE,OAA3C;AAAoD,MAAA,IAAI,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA/BD;;GAAMP,M;UACwEJ,S;;;KADxEI,M;AAiCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport Grid from './Grid';\nimport Keypad from './Keypad';\nimport Modal from './Modal';\n\nconst Wordle = ( { solution }) => {\n    const { currentGuess, handleKeyup, guesses, isCorrect, turn, usedKeys } = useWordle(solution)\n    const [showModal, setShowModal] = useState(false)\n\n    useEffect(() => {\n        window.addEventListener(\"keyup\", handleKeyup)\n\n        if (isCorrect) {\n            console.log(\"congratz you win\");\n            window.removeEventListener(\"keyup\", handleKeyup)\n        }\n\n        if (turn > 5) {\n            console.log(\"You lose\");\n            window.removeEventListener(\"keyup\", handleKeyup)\n        }\n\n        return () => window.removeEventListener(\"keyup\", handleKeyup)\n    }, [handleKeyup, isCorrect, turn]);\n\n    return (\n        <div>\n            <div>solution - {solution} </div>\n            <div>\n                current guess - {currentGuess}\n            </div>\n            <Grid currentGuess={currentGuess} guesses={guesses} turn={turn}/>\n            <Keypad usedKeys={usedKeys}/>\n            <Modal />\n        </div>\n    );\n}\n\nexport default Wordle;\n"]},"metadata":{},"sourceType":"module"}