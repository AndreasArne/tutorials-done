{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useWordle = solution => {\n  _s();\n\n  const [turn, setTurn] = useState(0);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [guesses, setGuesses] = useState([]); // each guess is an array\n\n  const [history, setHistory] = useState([]); // each guess is a string\n\n  const [isCorrect, setIsCorrect] = useState(false);\n\n  const formatGuess = () => {};\n\n  const addNewGuess = () => {};\n\n  const handleKeyup = _ref => {\n    let {\n      key\n    } = _ref;\n\n    if (/^[A-z]$/.test(key)) {}\n  };\n\n  return {\n    turn,\n    currentGuess,\n    guesses,\n    isCorrect,\n    handleKeyup\n  };\n};\n\n_s(useWordle, \"IVXWGlg92Q9wlAIzJ5cBAfAX2uI=\");\n\nexport default useWordle;","map":{"version":3,"sources":["/home/zeldah/git/tutorials/wordle-react/src/hooks/useWordle.js"],"names":["useState","useWordle","solution","turn","setTurn","currentGuess","setCurrentGuess","guesses","setGuesses","history","setHistory","isCorrect","setIsCorrect","formatGuess","addNewGuess","handleKeyup","key","test"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAH4B,CAGe;;AAC3C,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAJ4B,CAIe;;AAC3C,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMa,WAAW,GAAG,MAAM,CACzB,CADD;;AAIA,QAAMC,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,QAAMC,WAAW,GAAG,QAAa;AAAA,QAAZ;AAAEC,MAAAA;AAAF,KAAY;;AAC7B,QAAI,UAAUC,IAAV,CAAeD,GAAf,CAAJ,EAAyB,CAExB;AACJ,GAJD;;AAMA,SAAO;AAACb,IAAAA,IAAD;AAAOE,IAAAA,YAAP;AAAqBE,IAAAA,OAArB;AAA8BI,IAAAA,SAA9B;AAAyCI,IAAAA;AAAzC,GAAP;AACH,CAtBD;;GAAMd,S;;AAwBN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\"\n\nconst useWordle = (solution) => {\n    const [turn, setTurn] = useState(0)\n    const [currentGuess, setCurrentGuess] = useState('')\n    const [guesses, setGuesses] = useState([]) // each guess is an array\n    const [history, setHistory] = useState([]) // each guess is a string\n    const [isCorrect, setIsCorrect] = useState(false)\n\n    const formatGuess = () => {\n    }\n\n\n    const addNewGuess = () => {\n\n    }\n\n    const handleKeyup = ({ key }) => {\n        if (/^[A-z]$/.test(key)) {\n\n        }\n    }\n\n    return {turn, currentGuess, guesses, isCorrect, handleKeyup}\n}\n\nexport default useWordle"]},"metadata":{},"sourceType":"module"}